buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:${springGradlePlugin}")
    }
}

subprojects {

    configurations {
        configureEach {
            exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
            //exclude group: "com.h2database", module: "h2"
            exclude group: "commons-logging", module: "commons-logging"

        }
    }
    apply plugin: "java-library"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "org.springframework.boot"

    group = "com.example"
    version = "0.0.1-SNAPSHOT"

    java {
        sourceCompatibility = "17"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        api "org.springframework.boot:spring-boot-starter"
        api "org.springframework.boot:spring-boot-starter-web"
        api "org.springframework.boot:spring-boot-starter-thymeleaf"

        // データベースの接続
        api "com.mysql:mysql-connector-j"
//        api "org.hibernate.orm:hibernate-core"
//        api "com.zaxxer:HikariCP"

        compileOnly "org.projectlombok:lombok:${lombok}"
        annotationProcessor "org.projectlombok:lombok:${lombok}"

	}
}

project(":00-Utils") {

    dependencies {

    }
}

project(":01-ApacheIgnite") {

    bootRun {
        if (project.hasProperty('appJvmArgs')) {
            jvmArgs project.appJvmArgs.split(' ')
        }
    }


    dependencies {
        api project(":00-Utils")

        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'

        implementation 'org.apache.ignite:ignite-spring:2.16.0'
        implementation "com.h2database:h2:1.4.197"

        implementation 'org.mybatis.caches:mybatis-ignite:1.1.1'

    }
}


project(":02-ApacheIgniteAlone") {

    dependencies {

        api project(":00-Utils")

        implementation "com.h2database:h2:1.4.197"


        api "org.apache.ignite:ignite-spring-boot-autoconfigure-ext:1.0.0" // SpringBoot 2.2.2
        api "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2"

        api "org.apache.ignite:ignite-log4j2:${igniteVersion}"
        api "org.apache.ignite:ignite-core:${igniteVersion}"
        api "org.apache.ignite:ignite-spring:${igniteVersion}"
        api "org.springframework.kafka:spring-kafka"
        api "org.apache.ignite:ignite-spring:${igniteVersion}"
        api "com.lmax:disruptor:3.3.6"

        api "org.apache.tomcat:tomcat-jdbc"
        api "org.springframework.kafka:spring-kafka"
        //api "org.springframework.boot:spring-boot-starter-log4j2"


    }
}

project(":02-ApacheIgniteAlone") {

    dependencies {

        api project(":00-Utils")

        //implementation "com.h2database:h2:1.4.197"

        api "org.apache.ignite:ignite-spring-boot-autoconfigure-ext:1.0.0" // SpringBoot 2.2.2
        api "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2"

        api "org.apache.ignite:ignite-log4j2:${igniteVersion}"
        api "org.apache.ignite:ignite-core:${igniteVersion}"
        api "org.apache.ignite:ignite-spring:${igniteVersion}"
        api "org.springframework.kafka:spring-kafka"
        api "org.apache.ignite:ignite-spring:${igniteVersion}"
        api "com.lmax:disruptor:3.3.6"

        api "org.apache.tomcat:tomcat-jdbc"
        api "org.springframework.kafka:spring-kafka"
        //api "org.springframework.boot:spring-boot-starter-log4j2"

        //implementation 'org.mybatis.caches:mybatis-ignite:1.1.1'


    }
}



project(":99-Test") {

    dependencies {
        api project(":00-Utils")


//        api "org.springframework.session:spring-session-jdbc"
//        api "org.springframework.session:spring-session"
//        api "org.springframework.session:spring-core"
    }
}







